{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/Tablero\";\nimport * as i2 from \"@angular/common\";\nfunction TableroComponent_tr_3_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const celdas_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", celdas_r3, \" \");\n  }\n}\nfunction TableroComponent_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, TableroComponent_tr_3_td_1_Template, 2, 1, \"td\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const filas_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", filas_r1);\n  }\n}\nexport class TableroComponent {\n  constructor(tableroService) {\n    this.tableroService = tableroService;\n    this.tab = tableroService.tablero;\n  }\n  realizarMovimiento(fila, columna, jugador) {\n    if (fila < 0 || fila >= 3 || columna < 0 || columna >= 3 || this.tab[fila][columna] !== \" \") {\n      return false;\n    }\n    this.tab[fila][columna] = jugador;\n    return true;\n  }\n  verificarGanador(jugador) {\n    // Verificar filas, columnas y diagonales\n    for (let i = 0; i < 3; i++) {\n      if (this.tab[i].every(cell => cell === jugador) || this.tab.every(row => row[i] === jugador)) {\n        return true;\n      }\n    }\n    if (this.tab[0][0] === jugador && this.tab[1][1] === jugador && this.tab[2][2] === jugador) {\n      return true;\n    }\n    if (this.tab[0][2] === jugador && this.tab[1][1] === jugador && this.tab[2][0] === jugador) {\n      return true;\n    }\n    return false;\n  }\n}\nTableroComponent.ɵfac = function TableroComponent_Factory(t) {\n  return new (t || TableroComponent)(i0.ɵɵdirectiveInject(i1.TableroService));\n};\nTableroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TableroComponent,\n  selectors: [[\"app-tablero\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"tablero\"], [\"style\", \"border: 1px solid black; width: 30px; height: 30px;\", 4, \"ngFor\", \"ngForOf\"], [2, \"border\", \"1px solid black\", \"width\", \"30px\", \"height\", \"30px\"]],\n  template: function TableroComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"tablero:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\");\n      i0.ɵɵtemplate(3, TableroComponent_tr_3_Template, 2, 1, \"tr\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tab);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAIQA,6BAA6F;IACzFA,YACJ;IAAAA,iBAAK;;;;IADDA,eACJ;IADIA,0CACJ;;;;;IAHJA,0BAA8B;IAC1BA,oEAEK;IACTA,iBAAK;;;;IAHsBA,eAAQ;IAARA,kCAAQ;;;ACMvC,OAAM,MAAOC,gBAAgB;EAI3BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAChC,IAAI,CAACC,GAAG,GAAGD,cAAc,CAACE,OAAO;EACnC;EACOC,kBAAkB,CAACC,IAAY,EAAEC,OAAe,EAAEC,OAAe;IACtE,IAAIF,IAAI,GAAG,CAAC,IAAIA,IAAI,IAAI,CAAC,IAAIC,OAAO,GAAG,CAAC,IAAIA,OAAO,IAAI,CAAC,IAAI,IAAI,CAACJ,GAAG,CAACG,IAAI,CAAC,CAACC,OAAO,CAAC,KAAK,GAAG,EAAE;MACzF,OAAO,KAAK;;IAGhB,IAAI,CAACJ,GAAG,CAACG,IAAI,CAAC,CAACC,OAAO,CAAC,GAAGC,OAAO;IACjC,OAAO,IAAI;EACf;EAEOC,gBAAgB,CAACD,OAAe;IACrC;IACA,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACxB,IAAI,IAAI,CAACP,GAAG,CAACO,CAAC,CAAC,CAACC,KAAK,CAACC,IAAI,IAAIA,IAAI,KAAKJ,OAAO,CAAC,IAC3C,IAAI,CAACL,GAAG,CAACQ,KAAK,CAACE,GAAG,IAAIA,GAAG,CAACH,CAAC,CAAC,KAAKF,OAAO,CAAC,EAAE;QAC3C,OAAO,IAAI;;;IAInB,IAAI,IAAI,CAACL,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKK,OAAO,IAAI,IAAI,CAACL,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKK,OAAO,IAAI,IAAI,CAACL,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKK,OAAO,EAAE;MACxF,OAAO,IAAI;;IAGf,IAAI,IAAI,CAACL,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKK,OAAO,IAAI,IAAI,CAACL,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKK,OAAO,IAAI,IAAI,CAACL,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKK,OAAO,EAAE;MACxF,OAAO,IAAI;;IAGf,OAAO,KAAK;EACd;;AAlCaR,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV7BnB,0BAAI;MAAAA,wBAAQ;MAAAA,iBAAK;MAEjBA,6BAAO;MACHA,+DAIK;MACTA,iBAAQ;MACRA,yBAAqB;;;MANKA,eAAM;MAANA,iCAAM","names":["i0","TableroComponent","constructor","tableroService","tab","tablero","realizarMovimiento","fila","columna","jugador","verificarGanador","i","every","cell","row","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\JUAN PABLO\\Desktop\\TresEnRaya\\ClientApp\\src\\app\\game\\game.component.html","C:\\Users\\JUAN PABLO\\Desktop\\TresEnRaya\\ClientApp\\src\\app\\game\\game.component.ts"],"sourcesContent":["<h1>tablero:</h1>\r\n\r\n<table>\r\n    <tr *ngFor=\"let filas of tab\">\r\n        <td *ngFor=\"let celdas of filas\" style=\"border: 1px solid black; width: 30px; height: 30px;\">\r\n            {{celdas}}\r\n        </td>\r\n    </tr>\r\n</table>\r\n<div class=\"tablero\">\r\n","import { Component } from '@angular/core';\r\nimport { TableroService } from '../service/Tablero'; \r\n\r\n\r\n@Component({\r\n    selector: 'app-tablero',\r\n    templateUrl: 'game.component.html',\r\n  })\r\n\r\n\r\nexport class TableroComponent {\r\n\r\n  tab: string[][];\r\n  \r\n  constructor(private tableroService: TableroService) {\r\n    this.tab = tableroService.tablero;\r\n  }\r\n  public realizarMovimiento(fila: number, columna: number, jugador: string): boolean {\r\n    if (fila < 0 || fila >= 3 || columna < 0 || columna >= 3 || this.tab[fila][columna] !== \" \") {\r\n        return false;\r\n    }\r\n\r\n    this.tab[fila][columna] = jugador;\r\n    return true;\r\n}\r\n\r\npublic verificarGanador(jugador: string): boolean {\r\n  // Verificar filas, columnas y diagonales\r\n  for (let i = 0; i < 3; i++) {\r\n      if (this.tab[i].every(cell => cell === jugador) ||\r\n          this.tab.every(row => row[i] === jugador)) {\r\n          return true;\r\n      }\r\n  }\r\n\r\n  if (this.tab[0][0] === jugador && this.tab[1][1] === jugador && this.tab[2][2] === jugador) {\r\n      return true;\r\n  }\r\n\r\n  if (this.tab[0][2] === jugador && this.tab[1][1] === jugador && this.tab[2][0] === jugador) {\r\n      return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n\r\n\r\n}\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}